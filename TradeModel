from tensorflow.keras.models import load_model
import pandas as pd
import numpy as np
from datetime import datetime, timedelta

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
from tensorflow.keras.optimizers import Adam

class TradeModel:
    def __init__(self):
        self.model = None
        self.path = "/Users/jingyuanhe/code/algotrading/model/"
    
    def load_model(self):
        self.model = load_model('model.keras') 

    def create_model(self, X):
        model = Sequential([
            LSTM(64, input_shape=(X.shape[1], X.shape[2])),
            Dense(1, activation="linear")
        ])
        model.compile(optimizer=Adam(learning_rate=0.001), loss="mse", metrics=["mae"])
        model.summary()
        self.model = model
        

    def model_fit(self, X, y):
        self.model.fit(X, y, epochs=10, batch_size=32)
        self.model.save(self.path + "LSTM.keras")

    def predict_next_price(self, input):
        predicted_price = self.model.predict(input)[:0]
        return predicted_price
